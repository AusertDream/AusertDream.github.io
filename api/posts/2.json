{"total":55,"pageSize":12,"pageCount":5,"data":[{"title":"ACM学习笔记day36(树和图的DFS和BFS)","uid":"1429a762104f1c731f39acc20f00d741","slug":"ACM学习笔记day36","date":"2023-03-25T12:50:55.000Z","updated":"2023-04-08T10:54:15.019Z","comments":true,"path":"api/articles/ACM学习笔记day36.json","cover":"/img/codeforces.jpg","text":"水一篇blog（树和图的bfs和dfs。 树和图的存储方式采用领接表或者是领接矩阵都可以。dfs和bfs的思路是一样的。bfs套用bfs的模板就可以了，定义一个工作队列。将没有访问过的领接点放入队列中，然后处理即可dfs就遍历他的所有领接点，然后如果没访问过的话就dfs下去。然后...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"图论","slug":"图论","count":3,"path":"api/tags/图论.json"},{"name":"dfs","slug":"dfs","count":4,"path":"api/tags/dfs.json"},{"name":"bfs","slug":"bfs","count":3,"path":"api/tags/bfs.json"},{"name":"树","slug":"树","count":1,"path":"api/tags/树.json"},{"name":"图","slug":"图","count":1,"path":"api/tags/图.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day35(拓扑序列)","uid":"f4b8c236f24c3289ca5c3e33420c6ba4","slug":"ACM学习笔记day35","date":"2023-03-21T14:49:38.000Z","updated":"2023-04-08T10:54:07.183Z","comments":true,"path":"api/articles/ACM学习笔记day35.json","cover":"/img/codeforces.jpg","text":"今天的内容是拓扑排序。 若一个由图中所有点构成的序列A满足：对于图中的每条边 (x,y) x 在 A 中都出现在 y 之前，则称 A 是该图的一个拓扑序列。注意：图的拓扑序并不一定唯一所以题目的答案并不唯一。 那么我们应该怎么去求拓扑序列呢？很显然，我们从定义出发，我们需要保证序...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"图论","slug":"图论","count":3,"path":"api/tags/图论.json"},{"name":"dfs","slug":"dfs","count":4,"path":"api/tags/dfs.json"},{"name":"bfs","slug":"bfs","count":3,"path":"api/tags/bfs.json"},{"name":"拓扑排序","slug":"拓扑排序","count":1,"path":"api/tags/拓扑排序.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Django使用日志1","uid":"61b5f3ff4f3925a999a96e334e6690e1","slug":"Django使用日志1","date":"2023-03-11T15:02:23.000Z","updated":"2023-08-27T09:16:43.194Z","comments":true,"path":"api/articles/Django使用日志1.json","cover":null,"text":"wc，后端开发可太cooooool了！ django-admin startproject &lt;name&gt; 这条指令用于在当前文件夹下产生一个 &lt;name&gt; 的django默认框架的文件 这样做了之后，其实目前就已经可以作为一个网页的后端了，我们可以尝试部署...","link":"","photos":[],"count_time":{"symbolsCount":241,"symbolsTime":"1 mins."},"categories":[{"name":"Django","slug":"Django","count":1,"path":"api/categories/Django.json"}],"tags":[{"name":"后端","slug":"后端","count":1,"path":"api/tags/后端.json"},{"name":"backend","slug":"backend","count":1,"path":"api/tags/backend.json"},{"name":"Django","slug":"Django","count":1,"path":"api/tags/Django.json"},{"name":"开发","slug":"开发","count":1,"path":"api/tags/开发.json"},{"name":"项目","slug":"项目","count":1,"path":"api/tags/项目.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Python学习日志day4","uid":"f0263da8eb494789f12ee807a4dcd631","slug":"Python学习日志day4","date":"2023-03-05T14:00:31.000Z","updated":"2023-08-27T09:17:10.660Z","comments":true,"path":"api/articles/Python学习日志day4.json","cover":"/img/Python.jpg","text":"有关一些if条件判断的东西 检查一个元素是否在列表里面可以直接使用 value in array_name 返回的是True or False 如果查询是否不在，那就是not in 列表名可以直接作为if条件句的判断，如果为空则为false，反之为true。 关于字典","link":"","photos":[],"count_time":{"symbolsCount":139,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"编程","slug":"编程","count":1,"path":"api/tags/编程.json"},{"name":"萌新","slug":"萌新","count":1,"path":"api/tags/萌新.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Python学习日志day3","uid":"864fc2c6f57dbf62e38e8d5dfd7c13f6","slug":"Python学习日志day3","date":"2023-03-01T14:49:10.000Z","updated":"2023-08-27T09:17:05.089Z","comments":true,"path":"api/articles/Python学习日志day3.json","cover":"/img/Python.jpg","text":"关于range()用法range()参数说明调用range()如果有两个参数，就表示从第一个参数到第二个参数的中间的所有的数字，左闭右开。如果只有一个参数则就是从0到这个参数的所有数字，左闭右开。如果有三个参数，那么前两个参数和上面这个第一条一样，第三条参数则是他的步长，比如ra...","link":"","photos":[],"count_time":{"symbolsCount":719,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"},{"name":"语言","slug":"语言","count":3,"path":"api/tags/语言.json"},{"name":"基础","slug":"基础","count":3,"path":"api/tags/基础.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day33 (状态压缩DP)","uid":"2c6fdca36eef66c662c85d61e609fdfd","slug":"ACM学习笔记day33","date":"2023-02-28T14:11:30.000Z","updated":"2023-04-08T10:53:42.797Z","comments":true,"path":"api/articles/ACM学习笔记day33.json","cover":"/img/codeforces.jpg","text":"状态压缩DP，其实就是线性DP的基础上加上了状态压缩。 那么什么是状态压缩呢？其实就是将状态的集合，通过一种特定的方式来便利的表示出来，同时也降低了时间复杂度。一般的，我们会将很多种取或者不取的状态集合，用一个01串来表示。这样也就是通过状态压缩来实现这种功能了。 例如在蒙德里安...","link":"","photos":[],"count_time":{"symbolsCount":394,"symbolsTime":"1 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"DP","slug":"DP","count":5,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"状态压缩DP","slug":"状态压缩DP","count":1,"path":"api/tags/状态压缩DP.json"},{"name":"状态压缩","slug":"状态压缩","count":1,"path":"api/tags/状态压缩.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Python学习日志day2","uid":"a7b5056260bafa19bfefd98278cc6498","slug":"Python学习日志day2","date":"2023-02-26T14:02:34.000Z","updated":"2023-08-27T09:16:58.218Z","comments":true,"path":"api/articles/Python学习日志day2.json","cover":"/img/Python.jpg","text":"emm，是学习py的第二天力。 下周就要开始搞数据库课设力！ 要G力 anyway,之后py还是要学的，毕竟想自己搞个bot玩玩XD 关于sort方法sort()方法py中的sort使用方法和cpp中的有略微的不同。 cpp中是直接使用sort函数，然后里面放入形参就是了， 但是...","link":"","photos":[],"count_time":{"symbolsCount":921,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"},{"name":"语言","slug":"语言","count":3,"path":"api/tags/语言.json"},{"name":"基础","slug":"基础","count":3,"path":"api/tags/基础.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Python学习日志day1","uid":"9440b99fb66535a63cc60a8f05ed5e66","slug":"Python学习日志day1","date":"2023-02-23T05:38:44.000Z","updated":"2023-08-27T09:16:52.886Z","comments":true,"path":"api/articles/Python学习日志day1.json","cover":"/img/Python.jpg","text":"emm，因为导师要求，所以需要学习一下py，同时可能要为数据库的课设作语言准备，所以就另外开了这样的一个日志。 不过虽说是学习日志，这里我也基本上只会放一些容易忘记的函数啥的。 不会有其他的东西了。qwq 关于字符串 字符串.title()这个函数可以使得字符串里面每一个单词的首...","link":"","photos":[],"count_time":{"symbolsCount":986,"symbolsTime":"1 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"python","slug":"python","count":3,"path":"api/tags/python.json"},{"name":"语言","slug":"语言","count":3,"path":"api/tags/语言.json"},{"name":"基础","slug":"基础","count":3,"path":"api/tags/基础.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day32 (数字三角形，最长上升子序列)","uid":"0c3e2aa6872231e13fd503f7a08ea40b","slug":"ACM学习笔记day32","date":"2023-02-20T14:18:20.000Z","updated":"2023-04-08T10:53:21.330Z","comments":true,"path":"api/articles/ACM学习笔记day32.json","cover":"/img/codeforces.jpg","text":"今天的内容是数字三角形，和最长上升子序列。其中最长上升子序列可以说是dp问题里面非常经典的问题了。 数字三角形对于这个题，我们的dp思路其实很简单。当然在此之前，我们需要定义一下这个三角形的行和列。给的三角形是这样的: 7 3 8 8 1 0 2 7 4 4 4 5 2 6 5 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"DP","slug":"DP","count":5,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day31 (多重背包(二进制优化)，分组背包)","uid":"c4215acd2eabdb6df78cd852601c9d9a","slug":"ACM学习笔记day31","date":"2023-02-18T08:34:37.000Z","updated":"2023-04-08T10:53:14.362Z","comments":true,"path":"api/articles/ACM学习笔记day31.json","cover":"/img/codeforces.jpg","text":"今天的内容是多重背包的二进制优化解法和分组背包。 一开始听多重背包的二进制优化的时候还是蛮难的， 后来知道一个关键点之后就容易了。至于分组背包，其实和多重背包差不多的，只不过选择上稍微变了点。 多重背包（二进制优化）关于多重背包的一个二进制优化。我们原来的朴素做法就是，枚举第i个...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"DP","slug":"DP","count":5,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"背包问题","slug":"背包问题","count":1,"path":"api/tags/背包问题.json"},{"name":"背包","slug":"背包","count":1,"path":"api/tags/背包.json"},{"name":"多重背包","slug":"多重背包","count":1,"path":"api/tags/多重背包.json"},{"name":"分组背包","slug":"分组背包","count":1,"path":"api/tags/分组背包.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day30 (01背包，完全背包,多重背包(朴素解法))","uid":"26c83eef7dc2b42905d68bf63d792926","slug":"ACM学习笔记day30","date":"2023-02-11T11:53:11.000Z","updated":"2023-04-08T10:53:02.760Z","comments":true,"path":"api/articles/ACM学习笔记day30.json","cover":"/img/codeforces.jpg","text":"今天的内容是01背包多重背包完全背包。算是开启DP专题了。01背包是作为最关键的一个题目。其他完全背包和多重背包其实就是他的扩展。理解了01背包，理解其他的背包其实不难。 01背包01背包问题的解法，先从朴素开始。我们定义一个二维数组作为我们dp的数组。f[i][j]的意义为从前...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"蒟蒻","slug":"蒟蒻","count":4,"path":"api/tags/蒟蒻.json"},{"name":"DP","slug":"DP","count":5,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Chicken McNugget Theorem","uid":"de8de93bec780c9d57906902a53cb751","slug":"Chicken-McNugget-Theorem","date":"2023-02-09T07:50:47.000Z","updated":"2023-08-27T09:16:07.929Z","comments":true,"path":"api/articles/Chicken-McNugget-Theorem.json","cover":"/img/二次元の图/1.jpg","text":"麦乐鸡定理(bushi)链接 The Chicken McNugget Theorem (or Postage Stamp Problem or Frobenius Coin Problem) states that for any two relatively prime po...","link":"","photos":[],"count_time":{"symbolsCount":366,"symbolsTime":"1 mins."},"categories":[{"name":"数学","slug":"数学","count":1,"path":"api/categories/数学.json"}],"tags":[{"name":"数学","slug":"数学","count":7,"path":"api/tags/数学.json"},{"name":"定理","slug":"定理","count":1,"path":"api/tags/定理.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}}]}
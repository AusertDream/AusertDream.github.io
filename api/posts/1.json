{"total":57,"pageSize":12,"pageCount":5,"data":[{"title":"DeepLearning-Note","uid":"bf5e45ddd75ae274164ba73bf6dc58dd","slug":"DLNotes","date":"2024-11-06T09:16:39.000Z","updated":"2025-01-22T03:28:52.608Z","comments":true,"path":"api/articles/DLNotes.json","cover":"https://zh.d2l.ai/_images/front.png","text":" window.MathJax = { tex: { inlineMath: [['$', '$'], ['\\\\(', '\\\\)']], }}; Chapter1&amp;2 Introduction&amp;Pre-Knowledge张量的概念——由数值组成的数组，可以有多个维...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"16 mins."},"categories":[{"name":"AI","slug":"AI","count":2,"path":"api/categories/AI.json"}],"tags":[{"name":"AI","slug":"AI","count":2,"path":"api/tags/AI.json"},{"name":"DeepLearning","slug":"DeepLearning","count":1,"path":"api/tags/DeepLearning.json"},{"name":"DL","slug":"DL","count":1,"path":"api/tags/DL.json"},{"name":"Model","slug":"Model","count":1,"path":"api/tags/Model.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":true},{"title":"ACM学习笔记day34 (DP专题的总结)","uid":"2c328a2145590af1c8c2b559a8951062","slug":"ACM学习笔记day34","date":"2023-03-19T10:29:55.000Z","updated":"2023-04-08T10:53:59.571Z","comments":true,"path":"api/articles/ACM学习笔记day34.json","cover":"/img/codeforces.jpg","text":"已经很久没有写笔记了。主要是我一方面我摆（bushi,另外一个就是，后面的各种DP其实写笔记也没啥好写的，主要是理解这个DP是啥，然后也没有对应的板子好写的。自然也就不更新笔记了。那么最近是把基础的DP都学完了，作一个总结，大致的讲一下DP到底是个啥。DP的分类有啥怎么分类的。 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"笔记","slug":"笔记","count":3,"path":"api/tags/笔记.json"},{"name":"DP","slug":"DP","count":5,"path":"api/tags/DP.json"},{"name":"动态规划","slug":"动态规划","count":5,"path":"api/tags/动态规划.json"},{"name":"专题总结","slug":"专题总结","count":1,"path":"api/tags/专题总结.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":true},{"title":"ACM小本本","uid":"4a9ea142753f2671aa4c5ecbc1f2c491","slug":"ACM小本本","date":"2022-11-09T12:43:41.000Z","updated":"2023-08-25T14:20:11.540Z","comments":true,"path":"api/articles/ACM小本本.json","cover":"/img/codeforces.jpg","text":"这里是记录ACM知识点中一些零碎的东西，或者一些小的注意点啥的 1.使用二分模板的时候，当修改left值的时候，注意要让mid&#x3D;left+right+1&gt;&gt;1，不然会出现mid&#x3D;left然后死循环的出现2.快排和归并的本质就是分治，快排是先处理数据...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"学习","slug":"学习","count":43,"path":"api/tags/学习.json"},{"name":"笔记本","slug":"笔记本","count":2,"path":"api/tags/笔记本.json"},{"name":"零碎的","slug":"零碎的","count":2,"path":"api/tags/零碎的.json"},{"name":"知识点","slug":"知识点","count":2,"path":"api/tags/知识点.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":true},{"title":"训练模型踩过的坑","uid":"72eb9ae5539d21ca2b05ee99dd2098b0","slug":"训模型踩过的坑","date":"2025-01-13T08:49:34.726Z","updated":"2025-01-13T08:49:34.729Z","comments":true,"path":"api/articles/训模型踩过的坑.json","cover":"https://zh.d2l.ai/_images/front.png","text":"现在是2024年12月16日 20:14:50。贴主已经被自己写的transformer折磨了2周多一点了，因为始终无法debug出来问题，模型无法收敛。现在我终于找到问题了，只是学习率的问题，遂暴怒，毅然决定写下此篇，记录训练模型中踩过的坑。 计算loss的时候记得把paddi...","link":"","photos":[],"count_time":{"symbolsCount":367,"symbolsTime":"1 mins."},"categories":[{"name":"LLM","slug":"LLM","count":1,"path":"api/categories/LLM.json"}],"tags":[{"name":"学习","slug":"学习","count":43,"path":"api/tags/学习.json"},{"name":"笔记本","slug":"笔记本","count":2,"path":"api/tags/笔记本.json"},{"name":"零碎的","slug":"零碎的","count":2,"path":"api/tags/零碎的.json"},{"name":"知识点","slug":"知识点","count":2,"path":"api/tags/知识点.json"},{"name":"深度学习","slug":"深度学习","count":1,"path":"api/tags/深度学习.json"},{"name":"大模型","slug":"大模型","count":1,"path":"api/tags/大模型.json"},{"name":"训练","slug":"训练","count":1,"path":"api/tags/训练.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":false},{"title":"2024年终总结","uid":"ce7691ff8f2ef9994a806e6cb0977c21","slug":"2024年终总结","date":"2024-12-29T15:29:06.724Z","updated":"2024-12-29T15:29:06.726Z","comments":true,"path":"api/articles/2024年终总结.json","cover":"/img/Ausert.jpg","text":"一年的时间真的过的很快，转眼间2024年已经行将尾声。现在再回首看向2024年的自己，感觉2024年的自己上下起伏还是很大的。也是自高考失败，插班生失败之后，第一次做成功了一件事。或许在之后，拼尽全力但是考插失败的阴影能够逐渐散去吧。 这一年间，我都干了点啥呢？保研结算，进到同济...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"年终总结","slug":"年终总结","count":1,"path":"api/categories/年终总结.json"}],"tags":[{"name":"年终总结","slug":"年终总结","count":1,"path":"api/tags/年终总结.json"},{"name":"碎碎念","slug":"碎碎念","count":1,"path":"api/tags/碎碎念.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":false},{"title":"ML notes","uid":"615e3f2233f9034a4c7de4aa41e90c29","slug":"ML-notes","date":"2024-01-07T12:27:41.000Z","updated":"2024-05-20T02:19:18.630Z","comments":true,"path":"api/articles/ML-notes.json","cover":"/img/machine_learning.jpg","text":"前言ML教材为《机器学习_周志华》 第一章PAC理论模型PAC(Probably Approximately Correct 概率近似正确) learning model由Leslie Valiant提出。 $$\\begin{aligned}P(|f(x)-y|\\le \\epsi...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"AI","slug":"AI","count":2,"path":"api/categories/AI.json"}],"tags":[{"name":"AI","slug":"AI","count":2,"path":"api/tags/AI.json"},{"name":"Python","slug":"Python","count":2,"path":"api/tags/Python.json"},{"name":"ML","slug":"ML","count":1,"path":"api/tags/ML.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"Java Notes","uid":"f0b9b0e433bb738921b4a846a4505450","slug":"Java-Notes","date":"2024-01-07T12:21:49.000Z","updated":"2024-03-18T13:21:08.089Z","comments":true,"path":"api/articles/Java-Notes.json","cover":"/img/javalogo.png","text":"序言因课设需要以及工作需要，不得不得开始学java了。 以下为作为学习java的整体笔记，包括一切有关java的架构或者已经写好的包。 java版本采用2021年之后的java17。 因为本身已经学过C&#x2F;C++了，所以对于java基础的内容仅简单的介绍和记笔记，不作过多...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"Java","slug":"Java","count":1,"path":"api/categories/Java.json"}],"tags":[{"name":"Java","slug":"Java","count":1,"path":"api/tags/Java.json"},{"name":"language","slug":"language","count":1,"path":"api/tags/language.json"},{"name":"Android Development","slug":"Android-Development","count":1,"path":"api/tags/Android-Development.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"网安notes","uid":"8a327c3785082cab489d4df782f60065","slug":"网安notes","date":"2024-01-02T13:27:36.000Z","updated":"2024-01-03T01:43:54.905Z","comments":true,"path":"api/articles/网安notes.json","cover":[],"text":"网络安全和密码学的笔记绪论 网络空间安全的CIA三元组：保密性(Confidecial)，完整性(Integrity)，可用性(Available) 后续又有人提出来还需要两个要求（两个A）：真实性(Authenticity)，可审计性(Accountability) 被动攻击：...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"网络安全和密码学","slug":"网络安全和密码学","count":1,"path":"api/categories/网络安全和密码学.json"}],"tags":[{"name":"学习","slug":"学习","count":43,"path":"api/tags/学习.json"},{"name":"网络安全","slug":"网络安全","count":1,"path":"api/tags/网络安全.json"},{"name":"密码学","slug":"密码学","count":1,"path":"api/tags/密码学.json"},{"name":"期末复习","slug":"期末复习","count":1,"path":"api/tags/期末复习.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day41(懒标记线段树)","uid":"5a6c29c310d82ce99bfc421188b80faf","slug":"ACM学习笔记day41","date":"2023-08-27T07:57:57.000Z","updated":"2024-01-02T13:30:31.813Z","comments":true,"path":"api/articles/ACM学习笔记day41.json","cover":"/img/codeforces.jpg","text":"带懒标记的线段树实际上的函数就多了一个，pushdown操作。以下为板子：板子题目链接板子中线段树维护的是一段区间的数组的和。懒标记表示的是该节点的子树要加上去的值，不包括他自己。 struct node&#123; int l,r; ll sum&#x3D;0; ll add&...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"线段树","slug":"线段树","count":2,"path":"api/tags/线段树.json"},{"name":"板子","slug":"板子","count":2,"path":"api/tags/板子.json"},{"name":"懒标记","slug":"懒标记","count":1,"path":"api/tags/懒标记.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day40(无懒标记线段树)","uid":"f730cb1c16c6cae11f6020e8c15e8535","slug":"ACM学习笔记day40","date":"2023-08-26T14:16:45.000Z","updated":"2023-08-27T09:15:54.897Z","comments":true,"path":"api/articles/ACM学习笔记day40.json","cover":"/img/codeforces.jpg","text":"不带懒标记的线段树的板子。注意代码中节点属性是区间的最大值。下面为代码： struct node&#123; int l,r; int maxnum; &#125;; node tree[N*4]; void pushup(int u)&#123; tree[u].maxnum&...","link":"","photos":[],"count_time":{"symbolsCount":"3.8k","symbolsTime":"3 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"线段树","slug":"线段树","count":2,"path":"api/tags/线段树.json"},{"name":"板子","slug":"板子","count":2,"path":"api/tags/板子.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"扩展欧几里得2（exgcd的最小正整数解，通解）","uid":"f37560f9bc1b5fea2432f5534d910cca","slug":"扩展欧几里得2","date":"2023-07-19T13:53:28.000Z","updated":"2024-12-29T15:41:16.831Z","comments":true,"path":"api/articles/扩展欧几里得2.json","cover":"/img/codeforces.jpg","text":"由exgcd我们可以得到如下式子的一对解，前提是有解。ax+by&#x3D;c; (c%gcd(a,b)&#x3D;&#x3D;0)设一组解为x1,y1;即ax1+by1&#x3D;c; 记 u &#x3D; a*b&#x2F;gcd(a,b); 通解为:x&#x3D;x1+u&...","link":"","photos":[],"count_time":{"symbolsCount":398,"symbolsTime":"1 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"exgcd","slug":"exgcd","count":1,"path":"api/tags/exgcd.json"},{"name":"最小正整数解","slug":"最小正整数解","count":1,"path":"api/tags/最小正整数解.json"},{"name":"通解","slug":"通解","count":1,"path":"api/tags/通解.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},{"title":"ACM学习笔记day39(树状数组)","uid":"7710f88b0aefcb65b0ee353b8ff291a3","slug":"ACM学习笔记day39","date":"2023-07-18T14:56:43.000Z","updated":"2023-08-27T09:15:47.333Z","comments":true,"path":"api/articles/ACM学习笔记day39.json","cover":"/img/codeforces.jpg","text":"树状数组的板子。 有几个小结论需要记住。 每个结点t[x]保存以x为根的子树中叶结点值的和 每个结点覆盖的长度为lowbit(x) t[x]结点的父结点为t[x + lowbit(x)] 树的深度为log2n+1 理解树状数组的图为: lowbit操作： int lowbit(i...","link":"","photos":[],"count_time":{"symbolsCount":543,"symbolsTime":"1 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"binary index tree","slug":"binary-index-tree","count":1,"path":"api/tags/binary-index-tree.json"},{"name":"树状数组","slug":"树状数组","count":1,"path":"api/tags/树状数组.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}}]}
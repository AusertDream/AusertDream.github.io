{"title":"ACM学习笔记day2","uid":"a8b932df9b747ba9300a0aa8e66533aa","slug":"ACM学习笔记day2","date":"2022-11-07T02:41:28.000Z","updated":"2023-04-08T10:50:24.513Z","comments":true,"path":"api/articles/ACM学习笔记day2.json","keywords":null,"cover":"/img/codeforces.jpg","content":"<h2 id=\"hello-guys！这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的-后面被打脸了QAQ-只是一些小的注意点，或者心得啥的不要问我为什么没有day1的打卡博客。因为那个时候网站还没有搭建起来-x3D-x3D-So-here-we-go\"><a href=\"#hello-guys！这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的-后面被打脸了QAQ-只是一些小的注意点，或者心得啥的不要问我为什么没有day1的打卡博客。因为那个时候网站还没有搭建起来-x3D-x3D-So-here-we-go\" class=\"headerlink\" title=\"hello guys！这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的(后面被打脸了QAQ)只是一些小的注意点，或者心得啥的不要问我为什么没有day1的打卡博客。因为那个时候网站还没有搭建起来&#x3D; &#x3D;So here we go\"></a>hello guys！<br><br>这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的(<del>后面被打脸了QAQ</del>)<br><br>只是一些小的注意点，或者心得啥的<br><br>不要问我为什么没有day1的打卡博客。<br><br>因为那个时候网站还没有搭建起来&#x3D; &#x3D;<br><br>So here we go<br><br><span id=\"more\"></span></h2><h2 id=\"零碎的点\"><a href=\"#零碎的点\" class=\"headerlink\" title=\"零碎的点\"></a>零碎的点</h2><h2 id=\"1-使用二分模板的时候，当修改left值的时候，注意要让mid-x3D-left-right-1-gt-gt-1，不然会出现mid-x3D-left然后死循环的出现2-快排和归并的本质就是分治，快排是先处理数据再分治，归并是先分治再处理数据3-浮点数二分的时候，当要求保留4位小数的时候，循环条件应该为r-l-gt-1e-6-当保留六位的时候，应该为r-l-gt-1e-8就是位数要比保留的数字多2，比如4-gt-6-6-gt-84-计算机一秒大约可以运算10-8次。\"><a href=\"#1-使用二分模板的时候，当修改left值的时候，注意要让mid-x3D-left-right-1-gt-gt-1，不然会出现mid-x3D-left然后死循环的出现2-快排和归并的本质就是分治，快排是先处理数据再分治，归并是先分治再处理数据3-浮点数二分的时候，当要求保留4位小数的时候，循环条件应该为r-l-gt-1e-6-当保留六位的时候，应该为r-l-gt-1e-8就是位数要比保留的数字多2，比如4-gt-6-6-gt-84-计算机一秒大约可以运算10-8次。\" class=\"headerlink\" title=\"1.使用二分模板的时候，当修改left值的时候，注意要让mid&#x3D;left+right+1&gt;&gt;1，不然会出现mid&#x3D;left然后死循环的出现2.快排和归并的本质就是分治，快排是先处理数据再分治，归并是先分治再处理数据3.浮点数二分的时候，当要求保留4位小数的时候，循环条件应该为r-l&gt;1e-6,当保留六位的时候，应该为r-l&gt;1e-8就是位数要比保留的数字多2，比如4-&gt;6,6-&gt;84.计算机一秒大约可以运算10^8次。\"></a>1.使用二分模板的时候，当修改left值的时候，注意要让mid&#x3D;left+right+1&gt;&gt;1，不然会出现mid&#x3D;left然后死循环的出现<br><br>2.快排和归并的本质就是分治，快排是先处理数据再分治，归并是先分治再处理数据<br><br>3.浮点数二分的时候，当要求保留4位小数的时候，循环条件应该为r-l&gt;1e-6,当保留六位的时候，应该为r-l&gt;1e-8<br><br>就是位数要比保留的数字多2，比如4-&gt;6,6-&gt;8<br><br>4.计算机一秒大约可以运算10^8次。<br></h2><h2 id=\"一些话语\"><a href=\"#一些话语\" class=\"headerlink\" title=\"一些话语\"></a>一些话语</h2><h2 id=\"目前学到了acwing上的浮点数二分那边，感觉进度好慢TAT但是学校的那边的破事也是真的多（恼）又不能不管学校的破事（气）学到现在，感觉快排，归并排序根本原理就在于分治而对于二分，说实话y总的课给了我对二分新的理解二分不一定只能用在有序的数组上，无序的数组有时候也可以使用二分虽然他没说具体例子orz\"><a href=\"#目前学到了acwing上的浮点数二分那边，感觉进度好慢TAT但是学校的那边的破事也是真的多（恼）又不能不管学校的破事（气）学到现在，感觉快排，归并排序根本原理就在于分治而对于二分，说实话y总的课给了我对二分新的理解二分不一定只能用在有序的数组上，无序的数组有时候也可以使用二分虽然他没说具体例子orz\" class=\"headerlink\" title=\"目前学到了acwing上的浮点数二分那边，感觉进度好慢TAT但是学校的那边的破事也是真的多（恼）又不能不管学校的破事（气）学到现在，感觉快排，归并排序根本原理就在于分治而对于二分，说实话y总的课给了我对二分新的理解二分不一定只能用在有序的数组上，无序的数组有时候也可以使用二分虽然他没说具体例子orz\"></a>目前学到了acwing上的浮点数二分那边，感觉进度好慢TAT<br><br>但是学校的那边的破事也是真的多（恼）<br><br>又不能不管学校的破事（气）<br><br>学到现在，感觉快排，归并排序根本原理就在于分治<br><br>而对于二分，说实话y总的课给了我对二分新的理解<br><br>二分不一定只能用在有序的数组上，无序的数组有时候也可以使用二分<br><br>虽然他没说具体例子orz<br></h2><p>就先这样吧，距离我写这篇博客的时候<br><br>估计距离我学完这部分已经过去一段时间了<br><br>Bye~<br></p>\n","text":"hello guys！这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的(后面被打脸了QAQ)只是一些小的注意点，或者心得啥的不要问我为什么没有day1的打卡博客。因为那个时候网站还没有搭建起来&#x3D; &#x3D;So here we g...","link":"","photos":[],"count_time":{"symbolsCount":579,"symbolsTime":"1 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":20,"path":"api/tags/算法.json"},{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"打卡（大概）","slug":"打卡（大概）","count":1,"path":"api/tags/打卡（大概）.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#hello-guys%EF%BC%81%E8%BF%99%E9%87%8C%E6%98%AFAusert%EF%BC%81%E8%BF%99%E9%87%8C%E6%98%AF%E6%88%91%E5%AD%A6%E4%B9%A0ACM%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E6%89%93%E5%8D%A1%E7%9A%84%E5%9C%B0%E6%96%B9%EF%BC%8C%E5%BD%93%E7%84%B6%EF%BC%8C%E4%B8%8D%E4%BC%9A%E6%98%AF%E4%B8%80%E4%BA%9B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E5%95%A5%E7%9A%84-%E5%90%8E%E9%9D%A2%E8%A2%AB%E6%89%93%E8%84%B8%E4%BA%86QAQ-%E5%8F%AA%E6%98%AF%E4%B8%80%E4%BA%9B%E5%B0%8F%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9%EF%BC%8C%E6%88%96%E8%80%85%E5%BF%83%E5%BE%97%E5%95%A5%E7%9A%84%E4%B8%8D%E8%A6%81%E9%97%AE%E6%88%91%E4%B8%BA%E4%BB%80%E4%B9%88%E6%B2%A1%E6%9C%89day1%E7%9A%84%E6%89%93%E5%8D%A1%E5%8D%9A%E5%AE%A2%E3%80%82%E5%9B%A0%E4%B8%BA%E9%82%A3%E4%B8%AA%E6%97%B6%E5%80%99%E7%BD%91%E7%AB%99%E8%BF%98%E6%B2%A1%E6%9C%89%E6%90%AD%E5%BB%BA%E8%B5%B7%E6%9D%A5-x3D-x3D-So-here-we-go\"><span class=\"toc-text\">hello guys！这里是Ausert！这里是我学习ACM相关知识打卡的地方，当然，不会是一些学习笔记啥的(后面被打脸了QAQ)只是一些小的注意点，或者心得啥的不要问我为什么没有day1的打卡博客。因为那个时候网站还没有搭建起来&#x3D; &#x3D;So here we go</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9B%B6%E7%A2%8E%E7%9A%84%E7%82%B9\"><span class=\"toc-text\">零碎的点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E4%BD%BF%E7%94%A8%E4%BA%8C%E5%88%86%E6%A8%A1%E6%9D%BF%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%BD%93%E4%BF%AE%E6%94%B9left%E5%80%BC%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E6%B3%A8%E6%84%8F%E8%A6%81%E8%AE%A9mid-x3D-left-right-1-gt-gt-1%EF%BC%8C%E4%B8%8D%E7%84%B6%E4%BC%9A%E5%87%BA%E7%8E%B0mid-x3D-left%E7%84%B6%E5%90%8E%E6%AD%BB%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%87%BA%E7%8E%B02-%E5%BF%AB%E6%8E%92%E5%92%8C%E5%BD%92%E5%B9%B6%E7%9A%84%E6%9C%AC%E8%B4%A8%E5%B0%B1%E6%98%AF%E5%88%86%E6%B2%BB%EF%BC%8C%E5%BF%AB%E6%8E%92%E6%98%AF%E5%85%88%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE%E5%86%8D%E5%88%86%E6%B2%BB%EF%BC%8C%E5%BD%92%E5%B9%B6%E6%98%AF%E5%85%88%E5%88%86%E6%B2%BB%E5%86%8D%E5%A4%84%E7%90%86%E6%95%B0%E6%8D%AE3-%E6%B5%AE%E7%82%B9%E6%95%B0%E4%BA%8C%E5%88%86%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%BD%93%E8%A6%81%E6%B1%82%E4%BF%9D%E7%95%994%E4%BD%8D%E5%B0%8F%E6%95%B0%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%BE%AA%E7%8E%AF%E6%9D%A1%E4%BB%B6%E5%BA%94%E8%AF%A5%E4%B8%BAr-l-gt-1e-6-%E5%BD%93%E4%BF%9D%E7%95%99%E5%85%AD%E4%BD%8D%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%BA%94%E8%AF%A5%E4%B8%BAr-l-gt-1e-8%E5%B0%B1%E6%98%AF%E4%BD%8D%E6%95%B0%E8%A6%81%E6%AF%94%E4%BF%9D%E7%95%99%E7%9A%84%E6%95%B0%E5%AD%97%E5%A4%9A2%EF%BC%8C%E6%AF%94%E5%A6%824-gt-6-6-gt-84-%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%80%E7%A7%92%E5%A4%A7%E7%BA%A6%E5%8F%AF%E4%BB%A5%E8%BF%90%E7%AE%9710-8%E6%AC%A1%E3%80%82\"><span class=\"toc-text\">1.使用二分模板的时候，当修改left值的时候，注意要让mid&#x3D;left+right+1&gt;&gt;1，不然会出现mid&#x3D;left然后死循环的出现2.快排和归并的本质就是分治，快排是先处理数据再分治，归并是先分治再处理数据3.浮点数二分的时候，当要求保留4位小数的时候，循环条件应该为r-l&gt;1e-6,当保留六位的时候，应该为r-l&gt;1e-8就是位数要比保留的数字多2，比如4-&gt;6,6-&gt;84.计算机一秒大约可以运算10^8次。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E8%AF%9D%E8%AF%AD\"><span class=\"toc-text\">一些话语</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E5%89%8D%E5%AD%A6%E5%88%B0%E4%BA%86acwing%E4%B8%8A%E7%9A%84%E6%B5%AE%E7%82%B9%E6%95%B0%E4%BA%8C%E5%88%86%E9%82%A3%E8%BE%B9%EF%BC%8C%E6%84%9F%E8%A7%89%E8%BF%9B%E5%BA%A6%E5%A5%BD%E6%85%A2TAT%E4%BD%86%E6%98%AF%E5%AD%A6%E6%A0%A1%E7%9A%84%E9%82%A3%E8%BE%B9%E7%9A%84%E7%A0%B4%E4%BA%8B%E4%B9%9F%E6%98%AF%E7%9C%9F%E7%9A%84%E5%A4%9A%EF%BC%88%E6%81%BC%EF%BC%89%E5%8F%88%E4%B8%8D%E8%83%BD%E4%B8%8D%E7%AE%A1%E5%AD%A6%E6%A0%A1%E7%9A%84%E7%A0%B4%E4%BA%8B%EF%BC%88%E6%B0%94%EF%BC%89%E5%AD%A6%E5%88%B0%E7%8E%B0%E5%9C%A8%EF%BC%8C%E6%84%9F%E8%A7%89%E5%BF%AB%E6%8E%92%EF%BC%8C%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%E6%A0%B9%E6%9C%AC%E5%8E%9F%E7%90%86%E5%B0%B1%E5%9C%A8%E4%BA%8E%E5%88%86%E6%B2%BB%E8%80%8C%E5%AF%B9%E4%BA%8E%E4%BA%8C%E5%88%86%EF%BC%8C%E8%AF%B4%E5%AE%9E%E8%AF%9Dy%E6%80%BB%E7%9A%84%E8%AF%BE%E7%BB%99%E4%BA%86%E6%88%91%E5%AF%B9%E4%BA%8C%E5%88%86%E6%96%B0%E7%9A%84%E7%90%86%E8%A7%A3%E4%BA%8C%E5%88%86%E4%B8%8D%E4%B8%80%E5%AE%9A%E5%8F%AA%E8%83%BD%E7%94%A8%E5%9C%A8%E6%9C%89%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84%E4%B8%8A%EF%BC%8C%E6%97%A0%E5%BA%8F%E7%9A%84%E6%95%B0%E7%BB%84%E6%9C%89%E6%97%B6%E5%80%99%E4%B9%9F%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E4%BA%8C%E5%88%86%E8%99%BD%E7%84%B6%E4%BB%96%E6%B2%A1%E8%AF%B4%E5%85%B7%E4%BD%93%E4%BE%8B%E5%AD%90orz\"><span class=\"toc-text\">目前学到了acwing上的浮点数二分那边，感觉进度好慢TAT但是学校的那边的破事也是真的多（恼）又不能不管学校的破事（气）学到现在，感觉快排，归并排序根本原理就在于分治而对于二分，说实话y总的课给了我对二分新的理解二分不一定只能用在有序的数组上，无序的数组有时候也可以使用二分虽然他没说具体例子orz</span></a></li></ol>","author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"mapped":true,"prev_post":{"title":"ACM学习笔记day3(高精度四则运算)","uid":"ffffeb1fbf512f768ee4d72750569670","slug":"ACM学习笔记day3","date":"2022-11-08T14:01:59.000Z","updated":"2023-04-08T10:49:48.429Z","comments":true,"path":"api/articles/ACM学习笔记day3.json","keywords":null,"cover":"/img/codeforces.jpg","text":"学习ACM有关东西的第四天。今天用晚上时间稍微学了点高精度加减乘除的运算。感觉是在模拟人类的运算过程，除了乘法(这不废话)So,Here we go! 总述有必要说明一下，对于高精度的四则运算，加法和减法是两个高精度的数字，而乘法和除法是一个高精度乘或者除以一个数同时因为数字的位...","link":"","photos":[],"count_time":{"symbolsCount":"6.6k","symbolsTime":"6 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"打卡","slug":"打卡","count":35,"path":"api/tags/打卡.json"},{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"算法","slug":"算法","count":20,"path":"api/tags/算法.json"},{"name":"学习","slug":"学习","count":42,"path":"api/tags/学习.json"},{"name":"蒟蒻","slug":"蒟蒻","count":4,"path":"api/tags/蒟蒻.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}},"next_post":{}}
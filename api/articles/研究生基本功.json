{"title":"研究生基本功","uid":"5a49538b9703a5d95e8ed166fb3d78bc","slug":"研究生基本功","date":"2025-04-22T15:25:39.000Z","updated":"2025-04-22T15:30:56.877Z","comments":true,"path":"api/articles/研究生基本功.json","keywords":null,"cover":"/img/baseskills.jpg","content":"<h2 id=\"Linux简单使用\"><a href=\"#Linux简单使用\" class=\"headerlink\" title=\"Linux简单使用\"></a>Linux简单使用</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在进行以下操作之前，请先自行检索环境变量的作用，以及如何配置环境变量。</p></blockquote>\n<h3 id=\"新用户装机步骤\"><a href=\"#新用户装机步骤\" class=\"headerlink\" title=\"新用户装机步骤\"></a>新用户装机步骤</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 升级系统\nsudo apt update # 更新软件包列表，切记不要upgrade</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 配置 ssh，docker容器可以忽略\nsudo apt install openssh-server # 安装 ssh 服务\nsudo systemctl enable ssh # 开机自启\nsudo systemctl start ssh # 启动 ssh 服务</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 如果端口出现问题，配置防火墙，docker容器内单独考虑\nsudo ufw allow 22 # 开放 22 端口\nsudo ufw allow 80 # 开放 80 端口\nsudo ufw allow 443 # 开放 443 端口\nsudo ufw allow 3306 # 开放 3306 端口</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 在这之前，请先搞清楚公网和局域网的概念\n# 装好了以后，就可以在终端里通过下面的命令连接服务器。\nssh 192.168.8.65 # 注意替换ip\n# 如果需要X11图形化界面\nssh -X 192.168.8.65</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 使用 ssh-keygen 生成一个 ssh key\n# 目前使用密码上不如使用 key 安全的，因为 key 的长度通常是 2048 或 4096 位，远超普通的密码。这里建议按照 GitHub 官方网站上的教程生成新 SSH 密钥并添加到 ssh-agent，这样不仅可以用于登录 Linux 机器，也可以用于 git。\n\n# 使用 ssh-keygen 生成了密钥以后，你会得到两个文件：\n\n# ~&#x2F;.ssh&#x2F;id_rsa\n# ~&#x2F;.ssh&#x2F;id_rsa.pub\n# 其中 id_rsa 是私钥，id_rsa.pub 是公钥。不要把私钥发给任何人。\n# 首先使用密码登录刚才的机器, 然后创建 ~&#x2F;.ssh 目录，并且创建 ~&#x2F;.ssh&#x2F;authorized_keys 文件，配置好相应的权限：\nmkdir -p ~&#x2F;.ssh\ntouch ~&#x2F;.ssh&#x2F;authorized_keys\nchmod 700 ~&#x2F;.ssh\nchmod 600 ~&#x2F;.ssh&#x2F;authorized_keys\nnano ~&#x2F;.ssh&#x2F;authorized_keys\n\n# 添加你的公钥，如 ssh-rsa AAAA...\n# 把刚才生成的公钥 id_rsa.pub 添加到 ~&#x2F;.ssh&#x2F;authorized_keys 里，如果文件已经有内容，就添加在最后一行。这样以后每次使用 ssh 登录机器都不需要再输入密码了。\n# 禁止密码登录\n# 由于密码登录存在不安全因素，比如暴露在公网的 IP 会被扫描，而 key 是相对安全的，所以我们可以禁止不安全的密码登录：\nsudo nano &#x2F;etc&#x2F;ssh&#x2F;sshd_config\n\nPasswordAuthentication no # 添加在最后一行</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 配置 apt 源\n# 在使用 apt 的时候有可能因为网络原因导致安装过慢或失败，这时候可以配置一些 apt 源：\n\n# https:&#x2F;&#x2F;mirror.tuna.tsinghua.edu.cn&#x2F;help&#x2F;ubuntu&#x2F;\n# https:&#x2F;&#x2F;opsx.alibaba.com&#x2F;mirror\n# 下面以清华大学开源软件镜像站为例：\nsudo mv &#x2F;etc&#x2F;apt&#x2F;sources.list &#x2F;etc&#x2F;apt&#x2F;sources_backup.list\nsudo nano &#x2F;etc&#x2F;apt&#x2F;sources.list\n\n# 添加下面的内容，保存\ndeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse\n# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse\ndeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse\n# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse\ndeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse\n# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse\ndeb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse\n# deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse\n# 添加好以后，使用下面的命令更新 apt 以后，安装其他软件包的速度就会变快：\nsudo apt update\n# 恢复默认源：\nsudo mv &#x2F;etc&#x2F;apt&#x2F;sources_backup.list &#x2F;etc&#x2F;apt&#x2F;sources.list</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 安装 oh my zsh 以及常用命令\n# 安装 oh my zsh\n# 相比默认的 bash，zsh 有以下几个优点：\n\n# 当你使用 tab 提示的时候，如果有多个匹配项，你可以用 tab 进行切换\n# 当你想使用一个之前输入过的命令的时候，只需要输入首字母，然后按上方向键切换\n# 安装 oh my zsh 的步骤如下：\n\n# 安装 zsh\n# 安装 oh my zsh\n# 完整命令如下：\nsudo apt install -y git curl zsh\nsh -c &quot;$(curl -fsSL https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;robbyrussell&#x2F;oh-my-zsh&#x2F;master&#x2F;tools&#x2F;install.sh)&quot;\n# 清华源安装 oh myz sh\ngit clone https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;ohmyzsh.git\ncd ohmyzsh&#x2F;tools\nREMOTE&#x3D;https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;git&#x2F;ohmyzsh.git sh install.sh</code></pre>\n\n<h3 id=\"常用-Linux-命令\"><a href=\"#常用-Linux-命令\" class=\"headerlink\" title=\"常用 Linux 命令\"></a>常用 Linux 命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 基本命令，以下自行查找并练习使用\nls # 列出当前目录下的文件\ncd # 切换目录\npwd # 查看当前目录\nmkdir # 创建目录\nrm # 删除文件\nrmdir # 删除目录\ncp # 复制文件\nmv # 移动文件\ntouch # 创建文件\ncat # 查看文件内容\nless # 查看文件内容\nhead # 查看文件前几行\ntail # 查看文件后几行\nchmod # 修改文件权限\nchown # 修改文件所有者\nchgrp # 修改文件所属组\nfind # 查找文件\ngrep # 查找文件内容\ntar # 压缩文件\ngzip # 压缩文件\nunzip # 解压文件\nzip # 压缩文件\nssh # 远程登录\nscp # 远程复制文件</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 以下为常用指令，需要熟练使用\nls 展开文件目录\nll 是ls -lh的别名 显示详细目标列表\n\n访问\ncd .. 返回上一级 cd ~ 访问home目录\ncd xx 进入某一目录或当前目录\nGPU\nnvidia-smi 查看gpu使用情况\n\n路径\npwd 以绝对路径显示用户当前工作目录\n合并 查看文件\ncat a.txt b.txt-&gt; c.txt 创建新txt\ncat a.txt 显示文件内容，较大时会滚动，ctrl+s 停止滚动，ctrl+q恢复滚动，ctrl+c退出当前命令\nhead -n 5 train.csv 显示前五行内容\ntail -n 5 a.txt 显示文件尾部10行内容\n\n查找 筛选\nfind 在指定目录下查找文件\ngrep 筛选命令 ll | grep .md\nwhereis xx查找包含指定关键字的文件 \nwhich python 查找当前使用的命令的绝对路径\nlocate 寻找包含关键字的所有文件路径 (locate命令需要sudo进行安装)\n\n创建 删除 复制\nmkdir 创建文件夹\ntouch xx.txt 创建空文件\nrm 删除\nrm -r 移除文件夹\nrm -rf * 删除所有文件\ncp src dst 复制文件\ncp -r src dst 复制文件夹\nmv src dst 移动命令\n\n压缩 解压\nzip file.zip file 压缩文件\nzip files.zip -r dir 压缩整个文件夹\nunzip files.zip\nunzip -d &#x2F;temp test.zip\n \n*.tar 打包文件格式，吧小文件拼接在一起\n*.tar.gz 压缩文件，先打包成一个文件，然后再压缩一遍\ntar -cvf files.tar dir 打包文件夹\ntar -xvf files.tar 解包\n\n权限管理\nsudo 以root权限执行命令\nchmod -r 777 data 修改权限的命令，777任何人可以读写\nchown -R ypw data 修改所有者的权限，把data文件夹的所有权改为ypw\npasswd修改当前用户密码\nsudo passwd xx 强制修改某个用户的密码\n\n进程管理\nps aux 列出所有进程的详细信息\nps aux | grep ipython | grep -v grep\n首先使用 ps aux 获取所有的进程信息，然后用 grep ipython 查找带有 python 的进程，最后使用 grep -v grep 过滤 grep 进程本身。\nkill 杀掉执行中的进程，ps命令得到进程\n\n磁盘管理\ndf -h 查看磁盘空间\ndf -ih 查看Inodes使用情况\ndu -h xx 查看文件夹大小\nmount -t ext4 &#x2F;dev&#x2F;nvme0n1p1&#x2F;data挂载磁盘 \ndu -h --max-depth&#x3D;1 查看当前目录下所有文件和文件夹的大小 # NOTE: 主目录下不要有太多文件，否则会导致磁盘空间不足，数据集等放在机械盘\n\n系统管理\napt install curl ubuntu系统的包管理器，用于安装和卸载软件包\nexport 设置环境变量，一般卸载.bashrc或.zshrc文件中\nsource ~.&#x2F;bashrc 更新环境变量\n\n系统监测\nuname -a显示当前的系统信息\ntop 实时查看系统的运行状态，如CPU,内存，进程等信息\nifconfig | grep inet查看当前网卡的ip地址\nfree -h 查看内存使用情况\n\n网络通信\nssh user@xx.xx.xx.xx\nscp 本地文件 user@xx：目标主机路径 复制文件到远程服务器\nscp user@xx：目标主机路径 本地地址\nscp file user@xx:&#x2F;data 复制文件\nscp -r directory user@xx:&#x2F;data 复制文件需要添加 -r参数\nrsync -avP 本地文件夹 user@xx:远程地址 复制大量小文件时，用rsync命令\nwget url从指定的url下载文件</code></pre>\n\n<h3 id=\"常用的监控工具\"><a href=\"#常用的监控工具\" class=\"headerlink\" title=\"常用的监控工具\"></a>常用的监控工具</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 以下为常用指令，需要熟练使用\nnvidia-smi 查看GPU使用情况\nwatch -n 10 nvidia-smi # 周期性输出GPU使用情况。-n指定每多少秒执行一次命令。\n# 推荐用nvitop包来监控GPU&#x2F;CPU用量，在安装单个包的时候也可以加 -i 镜像源名称。\npip install nvitop -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple some-package # nvitop --corlor # 彩虹颜色\ntop 查看系统状态\nhtop 查看进程 sudo apt install htop\ndf -h 查看磁盘空间\nfree -h 查看内存使用情况\niotop 查看IO使用情况 sudo apt install iotop</code></pre>\n\n\n<h2 id=\"计算机网络基础\"><a href=\"#计算机网络基础\" class=\"headerlink\" title=\"计算机网络基础\"></a>计算机网络基础</h2><h3 id=\"子网划分等基本概念\"><a href=\"#子网划分等基本概念\" class=\"headerlink\" title=\"子网划分等基本概念\"></a>子网划分等基本概念</h3><p>该部分自己网络或者参考数据自行查找，这里不做要求</p>\n<p>主要搞清楚公网和局域网的概念，不要混淆</p>\n<p>学会使用两服务器通过网线构建p2p传输</p>\n<h3 id=\"服务器代理挂载\"><a href=\"#服务器代理挂载\" class=\"headerlink\" title=\"服务器代理挂载\"></a>服务器代理挂载</h3><p>为了方便解决问题，统一使用 <code>Clash Verge</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">https:&#x2F;&#x2F;www.clashverge.dev&#x2F; # 自行下载\n# 比较便宜的机场推荐，非广告\nhttps:&#x2F;&#x2F;www.mojie.co\nhttps:&#x2F;&#x2F;hk.freecat.cloud&#x2F;\n# 购买后在Clash Verge中添加订阅即可\n\n# 服务器挂载代理，在设置中开启局域网（不要和公网ip混淆来问这种愚蠢的问题）连接，查看自己的ip并记下端口，在服务器端的环境变量中设置如下脚本代码：\n# 定义代理地址（根据实际端口修改）\nproxy_on() &#123;\n    # 默认值（可自行调整）\n    local ip&#x3D;&quot;$&#123;1:-xxx,xxx,xxx,xxx&#125;&quot; # 自行改为自己的ip地址\n    local port&#x3D;&quot;$&#123;2:-xxx&#125;&quot; # 自行改为自己的端口\n\n    # 构造代理地址\n    export proxy&#x3D;&quot;http:&#x2F;&#x2F;$ip:$port&quot;\n    export http_proxy&#x3D;&quot;$proxy&quot;\n    export https_proxy&#x3D;&quot;$proxy&quot;\n    export ftp_proxy&#x3D;&quot;$proxy&quot;\n    echo &quot;代理已启用：$proxy&quot;\n&#125;\n\n# 禁用代理\nproxy_off() &#123;\n    unset proxy http_proxy https_proxy ftp_proxy\n    echo &quot;代理已禁用&quot;\n&#125;\n\n# 检查代理状态\nproxy_status() &#123;\n    if [ -n &quot;$http_proxy&quot; ]; then\n        echo &quot;当前代理状态：启用 ($http_proxy)&quot;\n    else\n        echo &quot;当前代理状态：未启用&quot;\n    fi\n&#125;\n# 使用方法\nproxy_on # 启用默认代理\nproxy_on your_ip your_port # 启用代理，并指定ip和端口\nproxy_off # 禁用代理\nproxy_status # 查看代理状态\n\n# 或者采用以下手动方式：\nexport proxy&#x3D;&quot;http:&#x2F;&#x2F;xxx.xxx.xxx.xxx:xxxx&quot; # 修改为你的代理地址和端口\nexport http_proxy&#x3D;$proxy\nexport https_proxy&#x3D;$proxy\nexport ftp_proxy&#x3D;$proxy</code></pre>\n\n<h2 id=\"Git简单使用\"><a href=\"#Git简单使用\" class=\"headerlink\" title=\"Git简单使用\"></a>Git简单使用</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#GitHub加速\ngit config --global url.&quot;https:&#x2F;&#x2F;gh-proxy.com&#x2F;github.com&#x2F;&quot;.insteadOf &quot;https:&#x2F;&#x2F;github.com&#x2F;&quot;\n\n#Huggingface加速\nexport HF_ENDPOINT&#x3D;https:&#x2F;&#x2F;hf-mirror.com</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># Git 常用命令\ngit init # 初始化本地仓库\ngit clone # 克隆远程仓库\ngit add # 添加文件到暂存区\ngit commit # 提交暂存区文件到本地仓库\ngit status # 查看仓库状态\ngit diff # 查看文件差异\ngit log # 查看提交历史\ngit reset # 回退到指定版本\ngit branch # 查看分支\ngit checkout # 切换分支\ngit merge # 合并分支\ngit pull # 拉取远程仓库\ngit push # 推送本地仓库到远程仓库</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 以下为常用指令\n# 需先在GitHub需要建立一个仓库 ，然后用git clone获取.git文件夹，放到你的对应文件夹下，然后开始如下命令\ngit clone\ngit init\ngit add .\ngit commit -m &quot;update&quot;\ngit push -u update main\n# 后面再用就git pull和git push\n# 推荐使用vscode自带的git插件，可以更方便的进行操作</code></pre>\n\n<h2 id=\"Conda安装\"><a href=\"#Conda安装\" class=\"headerlink\" title=\"Conda安装\"></a>Conda安装</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 下载最新版 Miniconda (Linux 64位)\ncurl -L -O https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;miniconda&#x2F;Miniconda3-latest-Linux-x86_64.sh\n# 运行安装脚本\nbash Miniconda3-latest-Linux-x86_64.sh\n# 安装时You can undo this by running &#96;conda init --reverse $SHELL&#96;?\n# 此项必须选择Yes,安装完成后重启终端conda命令才能生效~\n\n# 验证安装\nconda --version\n# 应该显示类似：conda 25.1.1\n\n# 添加清华 conda 源\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;free&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;pkgs&#x2F;main&#x2F;\nconda config --add channels https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;anaconda&#x2F;cloud&#x2F;conda-forge&#x2F;\n# 显示通道URL\nconda config --set show_channel_urls yes\n# 设置 pip 使用清华源\npip config set global.index-url https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">conda create -n pytorch python&#x3D;3.10 # 创建新环境，指定py版本\nconda remove -n pytorch --all # 移除环境\nconda activate pytorch # 激活环境\nconda deactivate # 退出当前环境\nconda –version # 查看conda版本\nconda list # 查看当前环境下安装的包\nconda env list # 查看当前安装了哪些环境\nconda info --envs # 查看当前安装了哪些环境（这两个命令一样的功能）\nconda export pytorch &gt; conda.yaml # 导出当前环境的配置文件\nconda create -f conda.yaml # 根据配置文件创建环境</code></pre>\n\n<h2 id=\"代码后台运行\"><a href=\"#代码后台运行\" class=\"headerlink\" title=\"代码后台运行\"></a>代码后台运行</h2><ul>\n<li>[NOTE] 按照推荐优先级排序</li>\n</ul>\n<h3 id=\"nohup命令\"><a href=\"#nohup命令\" class=\"headerlink\" title=\"nohup命令\"></a>nohup命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">nohup python xx.py &amp; #可以把程序放到后台运行，即便关闭当前终端也不会影响程序的运行。\nnohup python myscript.py &gt; myscript.log 2&gt;&amp;1 &amp; # 如果你想在后台运行python myscript.py并将日志保存到myscript.log，你可以这样做</code></pre>\n\n<h3 id=\"screen命令\"><a href=\"#screen命令\" class=\"headerlink\" title=\"screen命令\"></a>screen命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">screen -S mysession # 创建一个名为mysession的screen会话\nscreen -r mysession # 恢复名为mysession的screen会话\nscreen -ls # 列出所有screen会话\nscreen -d mysession # 将名为mysession的screen会话放入后台运行\nscreen -X -S mysession quit # 结束名为mysession的screen会话</code></pre>\n\n<h3 id=\"tmux命令\"><a href=\"#tmux命令\" class=\"headerlink\" title=\"tmux命令\"></a>tmux命令</h3><p>参考：<a href=\"https://blog.csdn.net/weixin_44343319/article/details/126864366\">https://blog.csdn.net/weixin_44343319/article/details/126864366</a></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">安装 ubuntu 版本tmux\nsudo apt-get install tmux\n启动 tmux\ntmux new -s roclinux\n创建一个新的窗口，自动创建0：bash\n1. 按Ctrl+B，然后松开\n2. 然后单独按一下C键\n在窗口间切换\n1. 按Ctrl+B，然后松开\n2. 按数字0键\n退出会话后，还能回来\n在tmux 0:bash下面\nwatch -n 2 free 这个命令会每隔2s更新一次内存状态，如果不输出ctrl+c，则永远不会退出\n \n带电脑去开会，电脑要断网，但不想中断服务器上正在执行的watch命令\n1. 按Ctrl+B，然后松开\n2. 输入字母d\ntmux环境会消失，只剩detached提示\n \n恢复联网后，执行\ntmux ls\ntmux a -t roclinux\n此时会恢复状态\ntmux</code></pre>\n\n\n<h2 id=\"Cuda和Cudnn安装\"><a href=\"#Cuda和Cudnn安装\" class=\"headerlink\" title=\"Cuda和Cudnn安装\"></a>Cuda和Cudnn安装</h2><p>参考：<a href=\"https://github.com/Liujian1997/Franka_env-Installation/blob/main/conda%2Bcuda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.md\">https://github.com/Liujian1997/Franka_env-Installation/blob/main/conda%2Bcuda%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE.md</a></p>\n<p>有sudo权限通常安装在 <code>/usr/local/</code> 目录下</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>以上内容作者：刘健</p></blockquote>\n","text":"Linux简单使用 在进行以下操作之前，请先自行检索环境变量的作用，以及如何配置环境变量。 新用户装机步骤# 升级系统 sudo apt update # 更新软件包列表，切记不要upgrade # 配置 ssh，docker容器可以忽略 sudo apt install ope...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"基本功","slug":"基本功","count":1,"path":"api/categories/基本功.json"}],"tags":[{"name":"基本功","slug":"基本功","count":1,"path":"api/tags/基本功.json"},{"name":"必须会的东西","slug":"必须会的东西","count":1,"path":"api/tags/必须会的东西.json"},{"name":"不会可以remake了","slug":"不会可以remake了","count":1,"path":"api/tags/不会可以remake了.json"},{"name":"倒也不必","slug":"倒也不必","count":1,"path":"api/tags/倒也不必.json"},{"name":"研究生","slug":"研究生","count":1,"path":"api/tags/研究生.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Linux%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Linux简单使用</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B0%E7%94%A8%E6%88%B7%E8%A3%85%E6%9C%BA%E6%AD%A5%E9%AA%A4\"><span class=\"toc-text\">新用户装机步骤</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8-Linux-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">常用 Linux 命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B8%B8%E7%94%A8%E7%9A%84%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">常用的监控工具</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80\"><span class=\"toc-text\">计算机网络基础</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E7%AD%89%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">子网划分等基本概念</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%BB%A3%E7%90%86%E6%8C%82%E8%BD%BD\"><span class=\"toc-text\">服务器代理挂载</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Git%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">Git简单使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Conda%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">Conda安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C\"><span class=\"toc-text\">代码后台运行</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#nohup%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">nohup命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#screen%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">screen命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#tmux%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">tmux命令</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Cuda%E5%92%8CCudnn%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">Cuda和Cudnn安装</span></a></li></ol>","author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"mapped":true,"prev_post":{"title":"ACM小本本","uid":"4a9ea142753f2671aa4c5ecbc1f2c491","slug":"ACM小本本","date":"2022-11-09T12:43:41.000Z","updated":"2023-08-25T14:20:11.540Z","comments":true,"path":"api/articles/ACM小本本.json","keywords":null,"cover":"/img/codeforces.jpg","text":"这里是记录ACM知识点中一些零碎的东西，或者一些小的注意点啥的 1.使用二分模板的时候，当修改left值的时候，注意要让mid&#x3D;left+right+1&gt;&gt;1，不然会出现mid&#x3D;left然后死循环的出现2.快排和归并的本质就是分治，快排是先处理数据...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"ACM","slug":"ACM","count":39,"path":"api/tags/ACM.json"},{"name":"学习","slug":"学习","count":43,"path":"api/tags/学习.json"},{"name":"笔记本","slug":"笔记本","count":2,"path":"api/tags/笔记本.json"},{"name":"零碎的","slug":"零碎的","count":2,"path":"api/tags/零碎的.json"},{"name":"知识点","slug":"知识点","count":2,"path":"api/tags/知识点.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":true},"next_post":{"title":"selfNotes","uid":"e51c6b0cc288c9b94c0f6d165fb0d5e1","slug":"selfNotes","date":"2025-03-24T03:58:23.871Z","updated":"2025-03-24T03:58:23.874Z","comments":true,"path":"api/articles/selfNotes.json","keywords":null,"cover":"https://zh.d2l.ai/_images/front.png","text":"以此note介绍LLM有关的trick或者一些信息差的东西。 计算loss的时候记得把padding token屏蔽掉，不然模型学的全是padding token，根本不会输出其他token LLM的学习率往往很低，不要以为0.0005就已经很小了，如果发现模型收敛到一定的值就不...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"LLM","slug":"LLM","count":1,"path":"api/categories/LLM.json"}],"tags":[{"name":"学习","slug":"学习","count":43,"path":"api/tags/学习.json"},{"name":"笔记本","slug":"笔记本","count":2,"path":"api/tags/笔记本.json"},{"name":"零碎的","slug":"零碎的","count":2,"path":"api/tags/零碎的.json"},{"name":"知识点","slug":"知识点","count":2,"path":"api/tags/知识点.json"},{"name":"深度学习","slug":"深度学习","count":1,"path":"api/tags/深度学习.json"},{"name":"大模型","slug":"大模型","count":1,"path":"api/tags/大模型.json"},{"name":"训练","slug":"训练","count":1,"path":"api/tags/训练.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"tech otakus save the world","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}},"feature":false}}
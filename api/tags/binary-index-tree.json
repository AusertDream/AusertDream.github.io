{"name":"binary index tree","slug":"binary-index-tree","count":1,"postlist":[{"title":"ACM学习笔记day39(树状数组)","uid":"7710f88b0aefcb65b0ee353b8ff291a3","slug":"ACM学习笔记day39","date":"2023-07-18T14:56:43.000Z","updated":"2023-08-27T09:15:47.333Z","comments":true,"path":"api/articles/ACM学习笔记day39.json","keywords":null,"cover":"/img/codeforces.jpg","text":"树状数组的板子。 有几个小结论需要记住。 每个结点t[x]保存以x为根的子树中叶结点值的和 每个结点覆盖的长度为lowbit(x) t[x]结点的父结点为t[x + lowbit(x)] 树的深度为log2n+1 理解树状数组的图为: lowbit操作： int lowbit(i...","link":"","photos":[],"count_time":{"symbolsCount":543,"symbolsTime":"1 mins."},"categories":[{"name":"ACM","slug":"ACM","count":42,"path":"api/categories/ACM.json"}],"tags":[{"name":"数据结构","slug":"数据结构","count":23,"path":"api/tags/数据结构.json"},{"name":"binary index tree","slug":"binary-index-tree","count":1,"path":"api/tags/binary-index-tree.json"},{"name":"树状数组","slug":"树状数组","count":1,"path":"api/tags/树状数组.json"}],"author":{"name":"Ausert","slug":"blog-author","avatar":"/img/Ausert.jpg","link":"/","description":"喜欢前沿科技，想要见证人类科学的飞跃","socials":{"github":"https://github.com/AusertDream","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/102368527?spm_id_from=333.1007.0.0"},"codeforce":{"icon":"/svg/codeforces.svg","link":"https://codeforces.com/profile/Ausert"}}}}}]}